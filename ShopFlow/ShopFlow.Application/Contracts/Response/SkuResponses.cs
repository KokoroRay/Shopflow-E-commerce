using ShopFlow.Application.DTOs;

namespace ShopFlow.Application.Contracts.Response;

/// <summary>
/// Response for successful SKU creation
/// </summary>
public class CreateSkuResponse
{
    /// <summary>
    /// Gets or sets the created SKU information
    /// </summary>
    public SkuDto Sku { get; set; } = null!;
    
    /// <summary>
    /// Gets or sets success message with Vietnamese localization
    /// </summary>
    public string Message { get; set; } = null!;
    
    /// <summary>
    /// Gets or sets whether the SKU code was auto-generated
    /// </summary>
    public bool IsCodeAutoGenerated { get; set; }
    
    /// <summary>
    /// Gets or sets whether the barcode was auto-generated
    /// </summary>
    public bool IsBarcodeAutoGenerated { get; set; }
}

/// <summary>
/// Response for successful SKU update
/// </summary>
public class UpdateSkuResponse
{
    /// <summary>
    /// Gets or sets the updated SKU information
    /// </summary>
    public SkuDto Sku { get; set; } = null!;
    
    /// <summary>
    /// Gets or sets success message with Vietnamese localization
    /// </summary>
    public string Message { get; set; } = null!;
    
    /// <summary>
    /// Gets or sets the list of fields that were updated
    /// </summary>
    public ICollection<string> UpdatedFields { get; set; } = new List<string>();
}

/// <summary>
/// Response for SKU retrieval
/// </summary>
public class GetSkuResponse
{
    /// <summary>
    /// Gets or sets the SKU information
    /// </summary>
    public SkuDto Sku { get; set; } = null!;
}

/// <summary>
/// Response for paginated SKU list
/// </summary>
public class GetSkusResponse
{
    /// <summary>
    /// Gets or sets the list of SKUs
    /// </summary>
    public ICollection<SkuDto> Skus { get; set; } = new List<SkuDto>();
    
    /// <summary>
    /// Gets or sets the total count of SKUs
    /// </summary>
    public int TotalCount { get; set; }
    
    /// <summary>
    /// Gets or sets the current page number
    /// </summary>
    public int Page { get; set; }
    
    /// <summary>
    /// Gets or sets the page size
    /// </summary>
    public int PageSize { get; set; }
    
    /// <summary>
    /// Gets or sets the total number of pages
    /// </summary>
    public int TotalPages { get; set; }
    
    /// <summary>
    /// Gets whether there are more pages available
    /// </summary>
    public bool HasNextPage => Page < TotalPages;
    
    /// <summary>
    /// Gets whether there are previous pages available
    /// </summary>
    public bool HasPreviousPage => Page > 1;
}

/// <summary>
/// Response for SKU deletion
/// </summary>
public class DeleteSkuResponse
{
    /// <summary>
    /// Gets or sets the success message
    /// </summary>
    public string Message { get; set; } = null!;
    
    /// <summary>
    /// Gets or sets the ID of the deleted SKU
    /// </summary>
    public long DeletedSkuId { get; set; }
}

/// <summary>
/// Response for bulk SKU operations
/// </summary>
public class BulkSkuOperationResponse
{
    /// <summary>
    /// Gets or sets the number of successful operations
    /// </summary>
    public int SuccessCount { get; set; }
    
    /// <summary>
    /// Gets or sets the number of failed operations
    /// </summary>
    public int FailedCount { get; set; }
    
    /// <summary>
    /// Gets or sets the list of error messages for failed operations
    /// </summary>
    public ICollection<string> Errors { get; set; } = new List<string>();
    
    /// <summary>
    /// Gets or sets the success message
    /// </summary>
    public string Message { get; set; } = null!;
}

/// <summary>
/// Response for SKU barcode generation
/// </summary>
public class GenerateBarcodeResponse
{
    /// <summary>
    /// Gets or sets the generated barcode
    /// </summary>
    public string Barcode { get; set; } = null!;
    
    /// <summary>
    /// Gets or sets the barcode type
    /// </summary>
    public string BarcodeType { get; set; } = null!;
    
    /// <summary>
    /// Gets or sets whether this is a Vietnamese EAN-13 barcode
    /// </summary>
    public bool IsVietnameseEan13 { get; set; }
    
    /// <summary>
    /// Gets or sets success message
    /// </summary>
    public string Message { get; set; } = null!;
}