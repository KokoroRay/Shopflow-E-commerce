# ShopFlow API Dockerfile
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# Copy project files and restore dependencies
COPY ["ShopFlow.API/ShopFlow.API.csproj", "ShopFlow.API/"]
COPY ["ShopFlow.Application/ShopFlow.Application.csproj", "ShopFlow.Application/"]
COPY ["ShopFlow.Domain/ShopFlow.Domain.csproj", "ShopFlow.Domain/"]
COPY ["ShopFlow.Infrastructure/ShopFlow.Infrastructure.csproj", "ShopFlow.Infrastructure/"]

RUN dotnet restore "ShopFlow.API/ShopFlow.API.csproj"

# Copy source code and build
COPY . .
WORKDIR "/src/ShopFlow.API"
RUN dotnet build "ShopFlow.API.csproj" -c $BUILD_CONFIGURATION -o /app/build

FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "ShopFlow.API.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

# Create non-root user for security
RUN groupadd -r shopflow && useradd -r -g shopflow shopflow
RUN chown -R shopflow:shopflow /app
USER shopflow

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

ENTRYPOINT ["dotnet", "ShopFlow.API.dll"]
